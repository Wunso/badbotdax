plugins {
    id 'java'
    id 'maven-publish'
}

group 'com.github.Wunso'
version '0.0.1'

java {
    toolchain {
        targetCompatibility = JavaVersion.VERSION_11
        sourceCompatibility = JavaVersion.VERSION_11
    }
}

repositories {
    mavenLocal()
    maven { url "https://repo.runelite.net" }
    maven { url "https://jitpack.io" }
    mavenCentral()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'com.github.Wunso'
            artifactId = 'badbotdax'
            version = '0.0.1'

            from components.java
        }
    }
}

def runeLiteVersion = getRuneLiteVersion()

static def getRuneLiteVersion() {
    URL url = new URL("http://repo.runelite.net/net/runelite/client/maven-metadata.xml")
    URLConnection urlConnection = url.openConnection()
    BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(
            urlConnection.getInputStream()))
    String latestName = null
    String inputLine
    while ((inputLine = bufferedReader.readLine()) != null) {
        inputLine = inputLine.trim()
        if (inputLine.contains("<release>")) {
            latestName = inputLine.replace("<release>", "").replace("</release>", "")
        }
    }
    bufferedReader.close()
    return latestName
}

dependencies {
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'org.json:json:20220320'
    compileOnly group: 'net.runelite', name:'client', version: runeLiteVersion
    implementation group: 'net.runelite', name: 'cache', version: runeLiteVersion
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.slf4j:slf4j-simple:1.7.36'
    testImplementation group: 'net.runelite', name: 'client', version: runeLiteVersion, {
        exclude group: 'ch.qos.logback', module: 'logback-classic'
    }

    implementation group: 'net.sf.jopt-simple', name:'jopt-simple', version: '5.0.4'
    implementation 'com.github.Wunso:badbot:2d7c23566d'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}